import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

p=0.01
ksize=7

selection = 'positive' # 'negative' or 'positive'
if selection == 'positive':
    col = 'red'
elif selection == 'negative':
    col='blue'

wd="/data/jzr5814/sourmash_dnds_estimation/tests/test/create_sequence_using_NG_assumption/0.01"
nucleotide_sequence = "GTCGGCAGTCTCTGCGAGGCCACTGTAATGCCGTGTAGACGGTCCAATGGCCAGTACGCATCCGCCGCTTGTGTGATCATAACGTTATGTCGGCCACCCGTGGCTACCAGAGACGGTCTTAGAAGGGTGAGGGTGTACTACTGCATCTCGTTTTATTGTGGGGATTTTGAGGATTTTCAAGTAAGCTTATCGAAACCAGCGACCGCTGTTCCTCCTCGAACCGAGGCATCCCAAGAATTGTCGACTCCAAAGTGTATCGTTGCGCATCGTTCTCAACAATGTGGGACCTCAGATCGCCTGGAGTTGGAGGCGGGCGCTCGACGTTTTAGGTCGAGTGTGGTCAACAAACAAGCCGTCGGAGCGCGCGCCCATGCCTGGAGACAAGTGAACCCTCAACGAGCGAATCTCCCCGTTGCAAGATTGAAATTTGCAAGTAAATCATCTTCTCTCTTTCATCGGGGTGAAGCTGAGACAGTAGCTACGATTCCTGTACTCCGCGCCCTTAGTGGCGCGAGTGGCAACGCCGGACAGGGCCTGGACAGCGTCTGTACACATCCAACATGGCAACCTAGTGGCTACCGAAGTTCGGGAAGCCCTCCTAACGCAGGGCTTAGTAGGGTATCAGTCTCGGCACCCCGATCGGACAAAGACAACACCGATGAGTCCCATGGAACGCCCGCAAAATCTGAGTTGCTTCAATCCGGGTCCTTTGATTCATGCTGGAGGGAAAACATTGGGGGGCTGCTTACCAAGGGGTACATGCTTCTCAATCTCGCGGGCAGCCGCCCCAGTGCCTCGCGGACCGAAGGGTTATGCTATACAATGGACAGAACACACTTAGAGACTGTAAACCAAACTGGCCAGATCCGTGTGCGGGAAGCTCACGCGATCTCGAATATTGCACTAGCCACTAATACAACGACATACAACGCAACATCGAACCCGTCTACCGAAGGCCAAATCCTCAAAGAACTACGGACAGAACGAGAGCCCAACTTTGGCCGATTACCAACGAACAAACGACGAGTTGGCAGACACGGTCAGTATGCGGTGCTTGCCTATGGCCCGCGATCAGGCATAAGGTTGCTACACTGCGCCCATGAAGCCTTGACAGACCGTGTAGCACGCCTGAGAGCACCAAATCCGCGTCGTCGGGCTCTTTCGATTGCCCTGAACAGAGAAAAAGCAGACTCTCTTGTTTCCGGTCCTACGACTCCTGAGTCGCCTGGTACTTGTTGTGCGTTGTCTTCCATGCTTCAATGTCTTGCACGAACAACGTCCGCTAACATTTATCAGGCTATAGACCGTCACTGCTACAAACCCGACTGCTGGACTTCGACTGATCCAACAAGCGAGATTAAGTACCATACATCCCACTTTTTCCATGGTATAACGGTGTGTTATATCCATCTTATTGAGATTGCCCAGACGGCCGGTAATACCTCTACTCGGGGACCCGCGGCAATGGGGCCGCTTGATAGAATAACAGCGGGTGACTCGATTCTACGTGACATGTGCTCGTCCTCGCTTTCGACATTAGCCACGGCCGTACGCGGCGTGGCATTCGCTCGGTACTCGTTACACAGTCTAGTTTTTACCGTTATTGGTACCTTGGGTCTGTCAATGAAAAAAGCGGATAATAGCAGTTGGTGCAGGCCCTACGCTCAGATCGAAGCGGTTGAGTTGGACGGCGCCATATGGCTGCGTCGCTCCTGTGTGATTTTCAAGGCGATATACTATCCAACACAGACTCGTACTCTCGGAGAGCGGGTACGAGCCTCGAGTTGGTGCTGGGTTAGTCTGGTATACTCACTCGGTTTGCGTCGACTAAGACTAGCGATCATCCGGGGGATGATGAACGGGAACCGGCGCAATATCATGCAGAATTCCCACCGTACGTGCACTGCAACCACTGTATACTACTGCACTCAACCGGGCGTAAAGATCTTGGCTTGTAAGTCTCCACAGCGATATGCTGAACCTACCCCGGATCTTGTTACAATACATCTAAAACCTGTTTTGTCGTCCCCGTGTCGTTTTCCGAACAGTCATGGTAGATTGGTTCGCCCTCAGTGCAAGATCGGGCTTAACAACAGGGGGCGGAATAAGCTACCAACTCACTCCACTGTCGACGTCCATGTCCCTTGCACTACTATGCTCTTTCACGCCGTGTACTTATTCGCGTTAACAGTGACCGGCACTTGGGCATTGGTGTTCCATATGATACATGCTCTATATTTGAACCTGATGACACCCCCGCTTTGGGAGACTCCCAGGAAATTAGAACCTATCCATTTACCCCTTTGTAAGGTTCGAAGTAACGTAAAAGAGTATGGGCAGATGTTCTCGGCAAAGCAGCGGCTTACCCCACGTACGCACTCTAGTCACCACGAACGAAGTTCTTCGTCCCGGCTTATTCGCTTCGTAATGCACGTTTGTCCAATCGAGCGCTCCCTCAAGAATCCGCAGGTCGCGGGGGGACCCATGACTACCCGACAAGGGACAGAGAACTCAGAGGGAGGTGCAAATCTATCCATACTCACCCGGCAGGCGAAACTTTCTCTGACAGCCGCGGTGGTACGCGCGTGCAGTCCCGGTTATGCAAATCATCTGACCCTCGGTACCCAGGGACGCTTAGTCGAGGGGTCATATCCGACCGAAACTAATACTGGGCTGCACTCGCCGTTTGTTGCGATCACTAACTTACGTCTTCCCCCGCAGTGCAGGGTCGAGGCGTGGGCAGCCTCACGGGGGGAGTGGAACTTACTGCTCTTAGGGCTCAGTTTAGGCCTATGTTGTCGAGGAATAGGAGCGGAAGCCCAAACCCCAAGCCGAAGTCGGGTCTCGGAGGCGGAACGGATTTATGTTATAGTTCCACGTACTAGGCGTGTGCTGTCCTATCTCCGGCTCGCGAGTACCGACGAAACGATTTTGAATGACTGCAGTGTATTTTGGTCGGGGATAGCTAGACGAGTGAGGTACCACATGGCGATCCAGCCCATCACTAGTTTGGATGGGTCAAAGAGGCGACGTACGCTCAAAGTTGCTGCTGTTCTCTCCGGTGACTCCGCTAGAGGTACGACGCATATACTTAATTCGAGTGCTAGCTTAGTGGCAATGGCAGTCCCCCGGCGAGCCCCGATCAAGCCTTTTCGCAGAGCACAAACCTTGTGCTGGCTGCCTGACCTAGGCCTCCCTCACCTTATCCCGACAAGCATGAAACAGCGTAAGTTATGCTATTTTATGGCCATTGCAATAGCCCCGATACAGGCGTACGCTATTTTATACGCCGACATCCGCAAAAGGCGGGTGCGCAATGCCATTTTAGTTTTTTTTCGCACGGAGAAGAAAGACTCCCTTCATTCACTGCTTCGTGGAATCCGGACCTTTCGCTTGGGATCTCTTGACAAATCACAGTTATTCTTCGACTTGACTAGACTAATGCACGTCGGTATATTTCCGCAAGGCCCTGTACTTGGGTGGAGCCTGAGGGGAATTTGCTCAGTCGAGATTTGCAAACCCATAAGTTCCGCAACTGTCCAGACAGTTCGTGCCCATGGTTGCATGGGATCAGACATAAGGCCTCTTACTTGGGGCACGGTTGCCACGAATCCAGACCAACTAATGAAATTCGGTACACGTATCACACGAACGGACACGCCGATTGACTGCTACTGTAAAAAAGCTAGCAGAACACTAACGTTTACAAAGTGGCCGCACGGCGAGCCAAGTATTGCCATGCGAAATATGCCGTGGCAGGTACTATATCGGTATCATAAGTCGATGCGGGATCAAAACAAGCGCATTATTTTAAACCGTCGCGGCATAAGTAAAGTGCCGCGCGAGAACGCTGCACGGGGCCGTCTCTCATCAGGCCAGGTACAAACCTGCGGGGATTGTAGGTCGGCGAAGCAAGTCGATTTGATGCACCATGGTATGCGAAAATACTACGTTGGACAAAACGCCAGGCATACTGCTCGCACGGCTCGGACCCAAACGGGGCCAAGGCATGAGGTAGGCATCCTGCATTTGTCAAACGCTGCGGTTAAGCTTTTAGCATTGTACATTCCTATAAGGCGGGTTCAAGCTGCGCAATCCTACAAACACAGTGACATTTTCCAGATGAGTCCCATACCGTCGCGTTTCGATTATTATAGCACACAGTCGTGGAATAGCCGCCGTCGTCTCCAACAGCGAGTCGTACCATCTTTTTTAATGAGTACTCAAAAGATCGTCTCTACAGTTCGCTGGACCGGCTTCGCGGGTCATGAGCCAGTCCTTCATGGGAGTAACCCCCGAGACTATTCTATCCCGAACCGTCCACTTCCTCATAAGATAATGCTTGTATCGGAGCAGTTTGATTATATGATCTCTTTGCACGGCCCGGTGCTGCACCGCTACGTCCCTCTTTGGAGCAATCTCTCGTCGTCTGCTGTGGTAAACGGATCCGGAGTGATATTAGCTGCCATACCTGCTCCGAACAATACTTCCACTCTAATATTCGGTTCCTTCTTACTAAGTCCCTCGGGGAAGTATGAGGATCGAGTCCCACTCCCCATCAATGTGGTCCACCGGCCGCTTGGCGGTGCCATGACTGTTAGCCCGTCTCTCTACTACAGGTTCTGTGATAACGTTCGAACTTCATACCGAGCGGTGCCGATTCTGACCACAAAGCAGACTGGTTATAAAGCGGGGAAAATTAACTCCTTTACGGTGATCAAAACACACGAGTCATACCACCATCTAAAATTGGAAAATACGCAGGGTGCCGACAAGGCAGTCCTATGGGCATGTCTCTACAACGAGGGCGCCGACTCCGGGTACTCGAGCGCCCAACTAAGGCGTCAAACAAAGGATTCGAGAAAACCCCCTGTTAAGGCAATACGTAAAAAGAGTCTCTACCGATCCCCCACCATAACACGGACTGGGGGTTGCGGCGCTATCGCAGCGATTACTCTAGCCGAGCTCCATCAAATACAGCTGACTGCGAGATCATCCTTGGGGTGGGTCTCACGTCATCTGGGGACGGACACGCGTTTTCGTACCATTGTTGGGGACGTAAGGGCATCATCCCAGCGGAGTCTCGCGGATATGCAAAGTGCGATCGGGGCGAGGCGACTAAGCTCCTGCTCAGAGAACCGTGAGAAGGGAGTTCCTAGACGCTCAAGGTCAATGCCTGAGGTTAATATCACACGCCGCTATATCGTTAAAAAGCGAATACCACCGTGGATTAAAACCGCTCACCTAGCGAAGGTGTCCCCCCCAGCGGGACGTCAAAGTTTCTCACATAACCAATGCACCTCCTCCCGAGAGTCGCAAAATGCCCCTGTTACGTTAGGAGTCGAAACGCGGGGGTTGCGCATACGAGACAGGAGGAGACACACGGTATGCACTATGTGGATCACTCCCCTCCTGTGTCTCGAGTGGACTTCTTTCATCGAGCAGACCTTTCGCATCAGTTACCGTTGCATTGATTGCCGATCTTTGTTCCGTTCTTCATCGCGCAAGGACTCTGTCAGTTTGATTGTCGCACACCCTTCGAATAAAAGTCGGATACTATCATTGAAAATGCTAAGGAGAATAGCTTATCCACGAGGTGGTCCCGTTTCAAAGCACTATGTCGTCGATCATACTGCAGCAATATGGAACCTTCGCATCTGCCATTTCCTCCAGGAGATTTTCTCAGCCCAGATTACAGCCGAGGTCAATCTGGGTTATGACGCCAGGTGTTCACGAAGCGCTGTATTGATCGGTAGTAGAAGCTCTGGGTTCGCTCGGAGACCGGACTATCAAGTCCCACCTCGCAGAGAAAATGCAGAAACTAAGGTTGCTTATTGGAAACTCCCCGACCACGTCTTTCTGCCGCATGTCGTCAAAGAGGAACACTGCGGTTTTCTCGACAATCGCAATGGATTACAATTGTCGCCACGCTCTTTCAAAGGATTGAGGTATTCGAACCTAGACAGATATTGGACGCGAGCAAAATTACCGCCGGTACTCTGCGGCGGGCGTTTCTATAGACAGGCCCACCTTTCGGGGATGTGTGAGATCCCCTATGGACACACCGTTTACCGCTCAGACTTCCAGCGAAACTTGACAGGACACAATCGCTCTTTCTACAGGTCGATTAGAAACGGCATGAAGAGTGAGGAGATACCCTCGTCAGCAAACCCCGACCTGAGGTCTCTGTTGATAGCGTACAACGCGCTATTTTACGCGATGTTTCCAACCGTACAATTAGGCGGGTTAGACCAACTAGGTCCGTACATACTTCTCAGCTGCCCTTGGTCCCATAGTTGCTGTTACCTTGGGAGGAAGCACGTGACTACTTTCGGGACCAACACCAACGGACGGGTCAGGGCGCCTTCAGCATACACCAGTTCCCTTACTACCCATGTCGACGACGTCATCCGCGAACATGCTGCCAAAAAGTCCCCTATGCAATCCGCGTATACTAATCCACCGCGATGGAAGAACATAGCCATGAGAGACCCATGGCACTCCAAGATAGGCTCAACCTATGAGCAATCATACCCCCAATTTATTGTGAGAGCCGCTGCGCTTGCGCCACGAAGCAATGGAATCTCTCAAACTGGACAAATGCCCTACGGCTTTGATTCCGTCCCTGCCCGTCCTATGCTCCATGAGATGTTGCCGAATTGGCATAACTCACTCGATATGGCATGTCATGTTCCGGATTGTCCACTAAATACCCTTGGTCGTGCTTTGTTATCTGGTCCTGAATCGAAGCCCTACTATGGTGTATTTCATAGAATGAGAAAGAGAACTAGCTCAGGCATACAAGGCCGTGCCAAAGCGATCCTCGTAGATGGACAATACAAACGATCAAGATCTACTTTGGATAGTCGAAAGCCCTGCGTCAAATCCGGGCTTGCGTTTCAGATGTTACTGGTTGCAGCGCAGCCTAATAGATGGTTGCGTATGACAATGTATAGCCTTCTAACCGATGTGACAGGTGCTTCGGCGAGTAACTCGGAAAAAAATAACACCAAGAGAAACTGTGTTGTAAGCGACCTATCAGCATGGAGGCATGTGGTCCCGTCCTTGCTCTCAAGTTGGACGAACACTCGATGTGCGAGACCGGGTGTACAACTAGAGATGGGCCACGCGGAGTTTTGGTCAGCGTACGGTCCTACAATTGGGCTTCGAGAATCATCTATCACTGCGGATTCCAGTTCACGTTCCGAGCGTACCGGTTCGCATTTTCAAATTAAATTGAAGCTTGCAGTGATGCTTTGTGCATTTCGATTTTCATCCAGACTATCGTCGACAGGACGGGGAATCTTTCTGTGTCCCCCGACAACAGAGTGTCAACGATCAAGTCACGTGTCACTTCCGGGACTTAGCTTCCGTGGCCCATTCGAACCGTTCGAGAAGACAAGGTTTCCATGGAGCTCAAGTGGAGGGTTTTCGCGGGCGTGTCAAGCGTCCCGTCGTCTACAGCGGACCTCCATTTCGTGTGGCAATGTCGTATTCGCGCTTAACGTGCCAGTTCATCCTGTGCGAGGGTGGGAGAAACCGTGTGGGTACAACTTCCTCGCCTCTCCCCGATGTCCAAAGCTGGCTCATTGTGTGGGCAAACCCTCGGAGAGATCTGGCTGGACACCGACTTGGACATTTCAACGCGAGATCTACTTCTGTCAAACGCTGGACCGACCCGATCAGGCACGCTTCCCCTGGTTAGTTAACTTTCGCTTTTTCTTCACAGGCGTGGGGCAGTACCATAAAGCCCGCATTAATGCAACTATGGGTTTAAGTGCAAACTTCGCCGCATGGTTCAGCGTTGCGGTGCTAGACTACCAACAGAAGTCTGAGGCTAACAGCCACGACGGACAAATTCGCGCCCATGGAGTAACAGGCCGTCTCCAGAATGGCGTACCATCGCTTTGTCCTGTAGTGGTCGCTGGACTGAACGGTGTGTCGAGAAGAATGATAGTTGACATAAGTGGACTGAGTTTCACGGGACACCTCTTATTCGGCTCCCACATCCAGTGCTTGTACACTTGCTGGCGTAGTATGCTGGGGCGTCGGAATGTTGCGCACGAAGTAGCTGGCTGCGACATACGTAAAATATCGCCACGGGGCACAACGCGGTCTTGGGCAGTCCAGACCTGCGACGTTCAGATTGGATGGCCGTTTGACGCGGTTCTGCGCAAAGTGCGACAGCCACTGAAACATGCCACATGTATTCTATCCCTCGGATGGGCAAGGCTAATGCTAGACCGATCGAACGGCAATATTGTACCATTGAGTCCTAAGCCACGCTGGCTGGCGAATTGCCAGTTCACAGATTGGTGGAAACCAATACTGAATGCACCGGTATCTAGGATCAGGAGGACTAAGATTATCCAGGTCTCATCGTCGGATACGCAATTAACAGATGAATATGGCGATTTAGGTCCGACCACGTGTATTTACCAAGTTAAGAGAACCCCTCTATCCATTTGTCTTTGGTCTTTACTGTCAGAGTTATTCCACTGTTTTAGGAAGCGTAGCCCCATAGAACTTTTTCGCATGCCTACCATCGCTATCAAAGGCATAAAACCGATGTTTAGCTTCATAACACAGTGTAATGACTTTAACTTCGGGTGGAATCCAAGAGTTCATGACTCGCCTATGAACTCTCGCGTCGGACCTGAACAGTGCCGCCGCAAGACGCAGCCTAGGCGCACCAGGACCGAACAGGACTTAGTAGTCGCTTCTGTGATCGCCGGATGTGGCGATTCTAGGAGTGAAGCAATATACCGCGGATCGCCTTCGCTGAGTCACCTTGCGCATTCGAGTTGTGCTCTACTTTATCACACTTTGACGGCTAAACCCAACGCGCGGCCAGCAACGCGCCCTACGCCGGCCGGCATGTATCGCAGTTCTAAGTCCTCGGATCGCGATCAGGCATGGATGACTGGCGCACAAGTTTCGCGTGATATCGTCACACTGTGGTTTCACTCAGTGATGGAGTGCGGAACTTTTCCCCTTCCATTTAAGGCAGCAATATGCAGCGATTCCGTAGTGGCTAAAGTACTGCGTAGTTGGTCCTCTATATGTACCAAGGTCGCCAGAAGTTTATCAAACGCAAACATAAGGACGGTATGCTACGAGGACAATGATCGGGAAGACCAAGTAGGGTGGGGGACTGGGCCTGAAGTATGCTCCGCCATTCCGCCAGGCCCTTACCATAGAGGTAACTGGATCGCAAGTGGCTCAGGGGATGGACATCATAATGAGAATACAGCCGTGACTCATAATGGTCGCAGACATTGGTTATCAAAACGGTTGGCGAGTACCAAACGGATCATCAAGTTTCCCACAGTTAACTTACGTCCGTCCCCCGTTAAGGCAGAATATGTTTGCCAAAACACCGATTGTGCACTGAGCTACTGTACGACTATCTACACTTTCTGTCCAACATGTTTGGGAAGCATTATACAAGCACACGGCATGACCCTATTAACAGAG"

codons = [nucleotide_sequence[i:i+3] for i in range(0, len(nucleotide_sequence), 3)]

codon_counts = {}
for codon in codons:
    codon_counts[codon] = codon_counts.get(codon, 0) + 1
sorted_codons = sorted(codon_counts.keys(), key=lambda x: codon_counts[x], reverse=True)


plt.bar(sorted_codons, [codon_counts[codon] for codon in sorted_codons], color='blue')
plt.tight_layout()
plt.xlabel('Codons')
#plt.subplots_adjust(bottom=0.1)
plt.xticks(rotation=90, ha='right')
plt.tick_params(axis='x', which='major', labelsize=5)

plt.ylabel('Frequency')
plt.title('negative_0.01_0 Codon Distribution')
plt.show()
plt.savefig(f'{wd}/negative_0.01_0_codon_dist.png',bbox_inches='tight')
